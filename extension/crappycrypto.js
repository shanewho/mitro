var mitro;
(function(){function g(a){var c=Error();c.name="CryptoError";c.message=a;this.stack=c.stack;this.message=a}function f(a){this.publicKeyValue=0}function d(){}function k(a){var c=a.getPublicKeyString(),b=new e.CrappyPublicKey;b.setKeyFromString(c);return{encrypt:function(a){return b.encryptForMe(a)},decrypt:function(c){return a.decryptMessage(c)},sign:function(a){a=h(a);a+=b.publicKeyValue;return JSON.stringify(a)},exportPublicKey:function(){return l(b)},toJson:function(){return JSON.stringify({type:"PRV",key:a.getPrivateKeyString()})},
toJsonEncrypted:function(c){return JSON.stringify({type:"PAS",key:a.getPrivateKeyString(),password:c})}}}function l(a){return{encrypt:function(c){return a.encryptForMe(c)},verify:function(c,b){var d=h(c)+a.publicKeyValue;b=JSON.parse(b);return d==b},toJson:function(){return JSON.stringify({type:"PUB",key:a.getPublicKeyString()})}}}"undefined"!==typeof module&&module.exports?(mitro={},module.exports=mitro.crypto={}):("undefined"===typeof mitro&&(mitro={}),mitro.crypto={});var e=mitro.crypto;mitro.crappycrypto=
e;g.prototype=Error();var h=function(a){return a.split("").reduce(function(a,b){a=(a<<5)-a+b.charCodeAt(0);return a&a},0)};f.prototype.setKeyFromString=function(a){this.publicKeyValue=parseInt(a)};f.prototype.encryptForMe=function(a){if(!this.publicKeyValue)throw Error("publicKeyValue not true?");return JSON.stringify({message:a,crypto:100-this.publicKeyValue})};f.prototype.getPublicKeyString=function(){return this.publicKeyValue.toString()};f.prototype.verifySignedByMe=function(a){a=JSON.parse(a);
if(a.crypto!=-this.publicKeyValue)throw new g;return a.message};d.prototype=new f;d.prototype.constructor=d;d.prototype.getPKValue=function(){return 100-this.publicKeyValue};d.prototype.decryptMessage=function(a){a=JSON.parse(a);if(a.crypto!=this.getPKValue())throw new g("Wrong key? Message: "+a.crypto+" key: "+this.getPKValue());return a.message};d.prototype.setPrivateKeyFromPassword=function(a){this.publicKeyValue=h(a)%99+1};d.prototype.getPrivateKeyString=function(){return this.getPublicKeyString()};
d.prototype.signMessage=function(a){return JSON.stringify({message:a,crypto:-this.publicKeyValue})};d.prototype.generateKey=function(){this.publicKeyValue=1+Math.floor(99*Math.random())};e.CrappyPrivateKey=d;e.CryptoError=g;e.CrappyPublicKey=f;e.GetPublicKey=function(){return new f};e.GetPrivateKey=function(){return new d};e.generate=function(){var a=new d;a.generateKey();return k(a)};e.loadFromJson=function(a,c){a=JSON.parse(a);if("PRV"==a.type||"PAS"==a.type){if("PAS"==a.type&&a.password!=c)throw new g("Password does not match?");
var b=new d;b.setKeyFromString(a.key);return k(b)}if("PUB"==a.type)return b=new f,b.setKeyFromString(a.key),l(b);throw new g("Bad key?");}})();
