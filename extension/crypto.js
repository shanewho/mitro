var mitro=mitro||{},keyczar=keyczar||require("keyczarjs");
(function(){function g(a){var b=Error();b.name="CryptoError";b.message=a;this.stack=b.stack;this.message=a}function l(a,b){var c=JSON.parse(a);try{var e=keyczar.fromJson(c.encryption,b),d=keyczar.fromJson(c.signing,b);return h(e,d)}catch(k){throw-1!==String(k).indexOf("decryption failed")&&(k.userVisibleError="Password incorrect"),k;}}function n(a,b){var c=new mitro.cache.LRUCache(1024),e={encryption:a,signing:b,encryptNoMemo:function(d){return keyczar.encryptWithSession(a,d)},encrypt:function(d){var a=
mitro.cache.makeKey("encrypt",d),b=c.getItem(a);b||(b=e.encryptNoMemo(d),c.setItem(a,b));return b},verify:function(a,c){return b.verify(a,c)},toJson:function(){var d={encryption:a.toJson(),signing:b.toJson()};return JSON.stringify(d)},toJsonEncrypted:function(d){d={encryption:a.toJsonEncrypted(d),signing:b.toJsonEncrypted(d)};return JSON.stringify(d)},encryptWith:function(d){if(!a.metadata.encrypted)return d.encrypt(e.toJson());var c={encryption:a.exportDecryptedJson(),signing:b.exportDecryptedJson()};
return d.encrypt(JSON.stringify(c))}};if(a.metadata.type==keyczar.TYPE_RSA_PRIVATE)e.decryptNoMemo=function(d){return keyczar.decryptWithSession(a,d)},e.decrypt=function(a){var b=mitro.cache.makeKey("decrypt",a),f=c.getItem(b);f||(f=e.decryptNoMemo(a),c.setItem(b,f));return f},e.sign=function(a){return b.sign(a)},e.exportPublicKey=function(){var d=a.exportPublicKey(),c=b.exportPublicKey();return h(d,c)};else if(a.metadata.type!=keyczar.TYPE_RSA_PUBLIC)throw new g("Unexpected key type: "+a.metadata.type);
return e}function h(a,b){var c=function(a){try{return a.toJson()}catch(b){return a.toJsonEncrypted("PASSWORD")}},c=mitro.cache.makeKey("makeKey",c(a),c(b)),e=m.getItem(c);e||(e=n(a,b),m.setItem(c,e));return e}mitro.crypto={};"undefined"!==typeof module&&module.exports&&(mitro.cache=require("./lru_cache.js"),module.exports=mitro.crypto);var f=mitro.crypto;mitro.crypto.Key=function(){};mitro.crypto.Key.prototype.encryptWith=function(a){};mitro.crypto.Key.prototype.sign=function(a){};g.prototype=Error();
var m=new mitro.cache.LRUCache(2048);f.CryptoError=g;f.generate=function(){var a={size:2048},b=keyczar.create(keyczar.TYPE_RSA_PRIVATE,keyczar.PURPOSE_DECRYPT_ENCRYPT,a),a=keyczar.create(keyczar.TYPE_RSA_PRIVATE,keyczar.PURPOSE_SIGN_VERIFY,a);return h(b,a)};f.loadFromJson=l;f.decryptWith=function(a,b){var c=b.decrypt(a);return l(c)}})();
