var fs=require("fs"),keyczar=require("./keyczar");function readFile(a){return fs.readFileSync(a,{encoding:"utf-8"})}function writeFile(a,b){return fs.writeFileSync(a,b,{encoding:"utf-8"})}function encrypt(a,b,c){a=keyczar.fromJson(readFile(a)).encrypt(b);writeFile(c,a)}
function decrypt(a,b,c,d,e){a=keyczar.fromJson(readFile(a),e);if(a.metadata.type!=d)throw Error("Unexpected key type: "+a.metadata.type);d=readFile(b);d=a.decrypt(d);null!==c&&(d!=c?(process.stderr.write(b+" did not decrypt correctly\n"),process.exit(1)):console.log(b+" decrypts successfully"));return d}function makeLonger(a){for(0===a.length&&(a="\x00");1E3>a.length;)a+=a;return a}function encryptSession(a,b,c){a=keyczar.fromJson(readFile(a));b=keyczar.encryptWithSession(a,b);writeFile(c,b)}
function decryptSession(a,b,c){a=keyczar.fromJson(readFile(a));var d=readFile(b);a=keyczar.decryptWithSession(a,d);null!==c&&a!=c&&(process.stderr.write(b+" did not decrypt correctly\n"),process.exit(1));return a}function sign(a,b,c){a=keyczar.fromJson(readFile(a));writeFile(c,a.sign(b))}function verify(a,b,c){b=readFile(c);keyczar.fromJson(readFile(a));b!=b&&(process.stderr.write("signature did not match\n"),process.exit(1))}
4!=process.argv.length&&5!=process.argv.length&&(process.stderr.write("node roundtripper.js (mode) (in/out directory) [message to en/decrypt]\n"),process.exit(1));var mode=process.argv[2],dirpath=process.argv[3],message="Hello this is a longish message from Javascript",password="foopassword";5==process.argv.length&&(message=process.argv[4]);
if("encrypt"==mode){console.log("generating private key ...");var privateKey=keyczar.create(keyczar.TYPE_RSA_PRIVATE,void 0,{size:1024});writeFile(dirpath+"/privatekey.json",privateKey.toJson());var publicKey=privateKey.exportPublicKey();writeFile(dirpath+"/publickey.json",publicKey.toJson());console.log("encrypting message length",message.length);encrypt(dirpath+"/publickey.json",message,dirpath+"/publickey_encrypted");console.log("encrypting key with password");writeFile(dirpath+"/privatekey_encrypted.json",
privateKey.toJsonEncrypted(password));console.log("generating AES key ...");var symmetric=keyczar.create(keyczar.TYPE_AES);writeFile(dirpath+"/symmetric.json",symmetric.toJson());encrypt(dirpath+"/symmetric.json",message,dirpath+"/symmetric_encrypted");encryptSession(dirpath+"/publickey.json",makeLonger(message),dirpath+"/publickey_session");console.log("generating signing key ...");var privateSignKey=keyczar.create(keyczar.TYPE_RSA_PRIVATE,keyczar.PURPOSE_SIGN_VERIFY,{size:1024});writeFile(dirpath+
"/privatekey_sign.json",privateSignKey.toJson());var publicSignKey=privateSignKey.exportPublicKey();writeFile(dirpath+"/publickey_sign.json",publicSignKey.toJson());sign(dirpath+"/privatekey_sign.json",message,dirpath+"/privatekey_sign")}else if("decrypt"==mode){console.log("asymmetric:");decrypt(dirpath+"/privatekey.json",dirpath+"/publickey_reencrypted",message,keyczar.TYPE_RSA_PRIVATE);console.log("symmetric:");decrypt(dirpath+"/symmetric.json",dirpath+"/symmetric_reencrypted",message,keyczar.TYPE_AES);
var output=decryptSession(dirpath+"/privatekey.json",dirpath+"/publickey_session_reencrypted",makeLonger(message));verify(dirpath+"/publickey_sign.json",output,dirpath+"/publickey_session_sign")}else if("roundtrip"==mode){var decrypted=decrypt(dirpath+"/privatekey.json",dirpath+"/publickey_encrypted",null,keyczar.TYPE_RSA_PRIVATE);encrypt(dirpath+"/publickey.json",decrypted,dirpath+"/publickey_reencrypted");var decrypted2=decrypt(dirpath+"/privatekey_encrypted.json",dirpath+"/publickey_encrypted",
null,keyczar.TYPE_RSA_PRIVATE,password);decrypted2!=decrypted&&(process.stderr.write("encrypted private key did not work?\n"),process.exit(1));verify(dirpath+"/publickey_sign.json",decrypted2,dirpath+"/privatekey_sign");decrypted=decrypt(dirpath+"/symmetric.json",dirpath+"/symmetric_encrypted",null,keyczar.TYPE_AES);encrypt(dirpath+"/symmetric.json",decrypted,dirpath+"/symmetric_reencrypted");decrypted=decryptSession(dirpath+"/privatekey.json",dirpath+"/publickey_session",null);encryptSession(dirpath+
"/publickey.json",decrypted,dirpath+"/publickey_session_reencrypted");sign(dirpath+"/privatekey_sign.json",decrypted,dirpath+"/publickey_session_sign");console.log("JS re-encrypted to",dirpath)}else process.stderr.write("mode must be encrypt, decrypt, or roundtrip\n"),process.exit(1);
