(function(){function f(c){var d=c.asn1,b=c.pki=c.pki||{};b.pemToDer=function(a){a=c.pem.decode(a)[0];if(a.procType&&"ENCRYPTED"===a.procType.type)throw{message:"Could not convert PEM to DER; PEM is encrypted."};return c.util.createBuffer(a.body)};b.privateKeyFromPem=function(a){a=c.pem.decode(a)[0];if("PRIVATE KEY"!==a.type&&"RSA PRIVATE KEY"!==a.type)throw{message:'Could not convert private key from PEM; PEM header type is not "PRIVATE KEY" or "RSA PRIVATE KEY".',headerType:a.type};if(a.procType&&
"ENCRYPTED"===a.procType.type)throw{message:"Could not convert private key from PEM; PEM is encrypted."};a=d.fromDer(a.body);return b.privateKeyFromAsn1(a)};b.privateKeyToPem=function(a,k){var e={type:"RSA PRIVATE KEY",body:d.toDer(b.privateKeyToAsn1(a)).getBytes()};return c.pem.encode(e,{maxline:k})};b.privateKeyInfoToPem=function(a,b){var e={type:"PRIVATE KEY",body:d.toDer(a).getBytes()};return c.pem.encode(e,{maxline:b})}}if("function"!==typeof define)if("object"===typeof module&&module.exports){var l=
!0;define=function(c,d){d(require,module)}}else return"undefined"===typeof forge&&(forge={}),f(forge);var g,m=function(c,d){d.exports=function(b){var a=g.map(function(a){return c(a)}).concat(f);b=b||{};b.defined=b.defined||{};if(b.defined.pki)return b.pki;b.defined.pki=!0;for(var d=0;d<a.length;++d)a[d](b);return b.pki}},h=define;define=function(c,d){g="string"===typeof c?d.slice(2):c.slice(2);if(l)return delete define,h.apply(null,Array.prototype.slice.call(arguments,0));define=h;return define.apply(null,
Array.prototype.slice.call(arguments,0))};define("require module ./asn1 ./oids ./pbe ./pem ./pbkdf2 ./pkcs12 ./pss ./rsa ./util ./x509".split(" "),function(){m.apply(null,Array.prototype.slice.call(arguments,0))})})();
