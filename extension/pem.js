(function(){function q(h){function b(a){for(var d=a.name+": ",c=[],e=0;e<a.values.length;++e)c.push(a.values[e].replace(/^(\S+\r\n)/,function(a,c){return" "+c}));d+=c.join(",")+"\r\n";c=0;a=-1;for(e=0;e<d.length;++e,++c)if(65<c&&-1!==a)c=d[a],","===c?(++a,d=d.substr(0,a)+"\r\n "+d.substr(a)):d=d.substr(0,a)+"\r\n"+c+d.substr(a+1),c=e-a-1,a=-1,++e;else if(" "===d[e]||"\t"===d[e]||","===d[e])a=e;return d}var m=h.pem=h.pem||{};m.encode=function(a,d){d=d||{};var c="-----BEGIN "+a.type+"-----\r\n",e;a.procType&&
(e={name:"Proc-Type",values:[String(a.procType.version),a.procType.type]},c+=b(e));a.contentDomain&&(e={name:"Content-Domain",values:[a.contentDomain]},c+=b(e));a.dekInfo&&(e={name:"DEK-Info",values:[a.dekInfo.algorithm]},a.dekInfo.parameters&&e.values.push(a.dekInfo.parameters),c+=b(e));if(a.headers)for(e=0;e<a.headers.length;++e)c+=b(a.headers[e]);a.procType&&(c+="\r\n");c+=h.util.encode64(a.body,d.maxline||64)+"\r\n";return c+="-----END "+a.type+"-----\r\n"};m.decode=function(a){for(var d=[],c=
/\s*-----BEGIN ([A-Z0-9- ]+)-----\r?\n?([\x21-\x7e\s]+?(?:\r?\n\r?\n))?([:A-Za-z0-9+\/=\s]+?)-----END \1-----/g,e=/([\x21-\x7e]+):\s*([\x21-\x7e\s^:]+)/,m=/\r?\n/,f;;){f=c.exec(a);if(!f)break;var b={type:f[1],procType:null,contentDomain:null,dekInfo:null,headers:[],body:h.util.decode64(f[3])};d.push(b);if(f[2]){for(var n=f[2].split(m),l=0;f&&l<n.length;){f=n[l].replace(/\s+$/,"");for(var g=l+1;g<n.length;++g){var k=n[g];if(!/\s/.test(k[0]))break;f+=k;l=g}if(f=f.match(e)){for(var g={name:f[1],values:[]},
k=f[2].split(","),p=0;p<k.length;++p)g.values.push(k[p].replace(/^\s+/,""));if(b.procType)if(b.contentDomain||"Content-Domain"!==g.name)if(b.dekInfo||"DEK-Info"!==g.name)b.headers.push(g);else{if(0===g.values.length)throw{message:'Invalid PEM formatted message. The "DEK-Info" header must have at least one subfield.'};b.dekInfo={algorithm:k[0],parameters:k[1]||null}}else b.contentDomain=k[0]||"";else{if("Proc-Type"!==g.name)throw{message:'Invalid PEM formatted message. The first encapsulated header must be "Proc-Type".'};
if(2!==g.values.length)throw{message:'Invalid PEM formatted message. The "Proc-Type" header must have two subfields.'};b.procType={version:k[0],type:k[1]}}}++l}if("ENCRYPTED"===b.procType&&!b.dekInfo)throw{message:'Invalid PEM formatted message. The "DEK-Info" header must be present if "Proc-Type" is "ENCRYPTED".'};}}if(0===d.length)throw{message:"Invalid PEM formatted message."};return d}}if("function"!==typeof define)if("object"===typeof module&&module.exports){var t=!0;define=function(h,b){b(require,
module)}}else return"undefined"===typeof forge&&(forge={}),q(forge);var r,u=function(h,b){b.exports=function(b){var a=r.map(function(a){return h(a)}).concat(q);b=b||{};b.defined=b.defined||{};if(b.defined.pem)return b.pem;b.defined.pem=!0;for(var d=0;d<a.length;++d)a[d](b);return b.pem}},s=define;define=function(h,b){r="string"===typeof h?b.slice(2):h.slice(2);if(t)return delete define,s.apply(null,Array.prototype.slice.call(arguments,0));define=s;return define.apply(null,Array.prototype.slice.call(arguments,
0))};define(["require","module","./util"],function(){u.apply(null,Array.prototype.slice.call(arguments,0))})})();
